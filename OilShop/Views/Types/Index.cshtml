@model IEnumerable<OilShop.Models.Data.Type>

@{
    ViewData["Title"] = "Типы";
}

<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Главная</a></li>
        <li class="breadcrumb-item active">Типы</li>
    </ol>
</nav>
<h2>Типы</h2>

<h6>
    <a class="btn text-dark" asp-action="Create">
        <i class="far fa-plus-square"></i>  Добавить тип
    </a>
</h6>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.TypeOil)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.TypeOil)
                </td>
                <td>
                    <a class="btn text-dark" asp-action="Details" asp-route-id="@item.Id" title="Посмотреть подробнее">
                        <i class="far fa-eye"></i>
                    </a> |
                    <a class="btn text-dark" asp-action="Edit" asp-route-id="@item.Id" title="Редактировать">
                        <i class="fas fa-pencil-alt"></i>
                    </a> |
                    <a class="btn text-dark" asp-action="Delete" asp-route-id="@item.Id" title="Удалить">
                        <i class="far fa-minus-square"></i>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

<main id="js-gallery" role="main" class="gallery">

    <section class="gallery__body">

        <div id="js-poster" class="main__gallery-poster poster">
            <div class="poster__content">
                <section class="poster__body">
                    <div class="poster__body--red">
                        <div></div>
                        <div></div>
                        <div></div>
                        <div></div>
                        <div></div>
                        <div></div>
                    </div>

                    <div class="poster__body--yellow">
                        <div></div>
                        <div></div>
                        <div></div>
                        <div></div>
                        <div></div>
                        <div></div>
                        <div></div>
                    </div>

                    <div class="poster__body--violet">
                        <div></div>
                        <div></div>
                        <div></div>
                        <div></div>
                        <div></div>
                        <div></div>
                    </div>
                </section>

            </div>
            <!-- .poster__content -->
        </div>
        <!-- .poster -->

    </section>
    <!-- .gallery__body -->

</main>
<!-- Gallery -->

<script>
    (function (window, document, undefined) {

        'use strict';


        /**
         * Selectors
         */
        var body = document.body,
            gallery = document.getElementById('js-gallery'),
            galleryWidth = gallery.offsetWidth,
            galleryHeight = gallery.offsetHeight,
            poster = document.getElementById('js-poster'),
            posterWidth = poster.offsetWidth,
            posterHeight = poster.offsetHeight,
            posterPadding = '50';


        /**
         * Prefixed requestAnimationFrame
         */
        var requestAnimationFrame = window.requestAnimationFrame
            || window.webkitRequestAnimationFrame
            || window.mozRequestAnimationFrame
            || window.msRequestAnimationFrame
            || function (callback) {
                return setTimeout(callback, 1000 / 60);
            };


        /**
         * Methods
         */
        var throttle = function (callback, limit) {
            var wait = false;
            return function () {
                if (!wait) {
                    callback.call();
                    wait = true;
                    setTimeout(function () {
                        wait = false;
                    }, limit);
                }
            };
        };

        var resizePoster = function () {

            // Define variable
            var scale;

            // Get values for poster dimensions
            scale = Math.min(
                galleryWidth / posterWidth,
                galleryHeight / posterHeight
            );


            // Scale Poster for larger viewports
            poster.style[Modernizr.prefixed('transform')] = 'translate(-50%, -50%) ' + 'scale(' + scale + ')';

            // Sync operation with browser
            requestAnimationFrame(resizePoster);
        };


        var onResize = throttle(function () {

            // Set Gallery width
            galleryWidth = gallery.offsetWidth - posterPadding;

            // Set Gallery height
            galleryHeight = gallery.offsetHeight - posterPadding;

            // Sync operation with browser
            requestAnimationFrame(resizePoster);

        }, 100);


        /**
         * Events/APIs/init
         */

        // Set Gallery width
        galleryWidth = gallery.offsetWidth - posterPadding;

        // Set Gallery height
        galleryHeight = gallery.offsetHeight - posterPadding;

        // Sync operation with browser
        requestAnimationFrame(resizePoster);

        // Listen for resize event
        window.addEventListener('resize', onResize, false);

    })(window, document);
</script>

@section Scripts{



}